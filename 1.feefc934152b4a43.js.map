{"version":3,"mappings":"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","names":["MAT_SELECT_SCROLL_STRATEGY_PROVIDER","provide","InjectionToken","deps","Overlay","useFactory","overlay","scrollStrategies","reposition","MatSelectModule","ɵfac","ɵmod","i0","ɵinj","imports","CommonModule","OverlayModule","MatOptionModule","MatCommonModule","CdkScrollableModule","MatFormFieldModule","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","args","dirtyOptions","options","width","String","defaultWidth","formats","formatLong","date","buildFormatLongFn","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","dirtyString","string","matchResult","match","matchPatterns","defaultMatchWidth","value","matchedString","parsePatterns","defaultParseWidth","Object","prototype","toString","call","array","predicate","key","length","findIndex","pattern","test","object","hasOwnProperty","findKey","valueCallback","rest","slice","code","formatDistance","token","count","result","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","_dirtyOptions","number","Number","rem100","era","buildLocalizeFn","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","matchPattern","parseResult","parsePattern","buildMatchPatternFn","parseInt","buildMatchFn","any","index","weekStartsOn","firstWeekContainsDate","dirtyDate","dirtyAmount","requiredArgs","arguments","timestamp","toDate","getTime","amount","toInteger","Date","addMilliseconds","target","dirtyObject","TypeError","property","p","timeLongFormatter","P","dateTimeFormat","datePattern","timePattern","dateLongFormatter","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","protectedDayOfYearTokens","protectedWeekYearTokens","indexOf","format","input","RangeError","concat","locale","localeWeekStartsOn","defaultWeekStartsOn","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","year","getUTCFullYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","startOfNextYear","startOfUTCWeek","firstWeekOfThisYear","startOfThisYear","dirtyDay","currentDay","remainder","dayIndex","fourthOfJanuaryOfNextYear","startOfUTCISOWeek","fourthOfJanuaryOfThisYear","getUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","startOfUTCISOWeekYear","Math","round","getUTCWeekYear","firstWeek","startOfUTCWeekYear","numericPatterns","timezonePatterns","parseNumericPattern","n","RegExp","enumValue","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","floor","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","G","priority","parse","set","flags","incompatibleTokens","y","isTwoDigitYear","parseNDigits","unit","validate","normalizedTwoDigitYear","normalizeTwoDigitYear","Y","R","_match","_flags","firstWeekOfYear","u","Q","setUTCMonth","q","M","L","w","dirtyWeek","week","getUTCWeek","setUTCWeek","I","dirtyISOWeek","isoWeek","getUTCISOWeek","setUTCISOWeek","d","subPriority","isLeapYear","isLeapYearIndex","getUTCMonth","D","E","setUTCDay","e","wholeWeekDays","c","i","setUTCISODay","a","dayPeriodEnumToHours","b","B","h","isPM","getUTCHours","H","K","k","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","parseTimezonePattern","timestampIsSet","x","t","_token","parseAnyDigitsSigned","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","defaultLocale","NaN","subFnOptions","setters","dateToSystemTimezone","tokens","map","substring","firstCharacter","longFormatter","longFormatters","join","usedTokens","useAdditionalWeekYearTokens","isProtectedWeekYearToken","throwProtectedError","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","parser","parsers","Array","isArray","incompatibleToken","_i","usedToken","fullToken","push","_","cleanEscapedString","uniquePrioritySetters","setter","sort","filter","setterArray","isNaN","subMilliseconds","getTimezoneOffsetInMilliseconds","assign","convertedDate","setFullYear","setHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","differenceInMilliseconds","ceil","queue","AsyncScheduler","AsyncAction","constructor","scheduler","work","super","this","schedule","state","delay","flush","execute","closed","_execute","requestAsyncId","id","Subject","bufferSize","POSITIVE_INFINITY","windowTime","_events","_infiniteTimeWindow","_bufferSize","_windowTime","next","nextInfiniteTimeWindow","nextTimeWindow","isStopped","shift","ReplayEvent","_getNow","_trimBufferThenGetEvents","_subscribe","subscriber","len","subscription","ObjectUnsubscribedError","hasError","Subscription","observers","SubjectSubscription","add","ObserveOnSubscriber","error","thrownError","complete","now","eventsCount","spliceCount","max","splice","ctx_r11","ctx_r13","oxw","routes","path","component","fb","recordService","dialog","timer","pipe","configOrBufferSize","config","refCount","source","lift","useRefCount","subject","isComplete","innerSub","ReplaySubject","subscribe","err","undefined","unsubscribe","shareReplayOperator","shareReplay","group","remark","hour","minute","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","from","ngOnInit","reloadRangeRecord","getRange","startTime","endTime","form","reset","alert","onSubmit","clockType","differenceInMinutes","openEditTimeTpl","get","create","defaultTime","editTimeForm","editTimeDialogRef","open","editTimeTpl","afterClosed$","onEditTimeSubmit","close","DashboardComponent","selectors","ctx","DashboardRoutingModule","RouterModule","DashboardModule","FormsModule","ReactiveFormsModule","SharedModule"],"sources":["./node_modules/@angular/material/fesm2015/select.mjs","./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","./node_modules/date-fns/esm/locale/en-US/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","./node_modules/date-fns/esm/addMilliseconds/index.js","./node_modules/date-fns/esm/subMilliseconds/index.js","./node_modules/date-fns/esm/_lib/assign/index.js","./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","./node_modules/date-fns/esm/_lib/protectedTokens/index.js","./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","./node_modules/date-fns/esm/_lib/setUTCDay/index.js","./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","./node_modules/date-fns/esm/parse/_lib/parsers/index.js","./node_modules/date-fns/esm/_lib/setUTCWeek/index.js","./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","./node_modules/date-fns/esm/_lib/setUTCISODay/index.js","./node_modules/date-fns/esm/parse/index.js","./node_modules/date-fns/esm/differenceInMilliseconds/index.js","./node_modules/date-fns/esm/differenceInMinutes/index.js","./node_modules/rxjs/_esm2015/internal/scheduler/queue.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js","./node_modules/rxjs/_esm2015/internal/ReplaySubject.js","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard-routing.module.ts","./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js","./src/app/pages/dashboard/dashboard.module.ts"],"sourcesContent":["import * as i7 from '@angular/cdk/overlay';\nimport { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0,\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)',\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)',\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSelectTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() {\n        return this._disableOptionCentering;\n    }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() {\n        return this._typeaheadDebounceInterval;\n    }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        var _a, _b;\n        return this.multiple ? ((_a = this._selectionModel) === null || _a === void 0 ? void 0 : _a.selected) || [] : (_b = this._selectionModel) === null || _b === void 0 ? void 0 : _b.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSelectBase, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatSelectBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatSelectBase, inputs: { panelClass: \"panelClass\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", sortComparator: \"sortComparator\", id: \"id\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSelectBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i6.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }, { type: i4.NgControl, decorators: [{\n                        type: Self\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SELECT_SCROLL_STRATEGY]\n                    }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_SELECT_CONFIG]\n                    }] }];\n    }, propDecorators: { trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disableOptionCentering: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize &&\n                    this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple\n            ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X\n            : SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - ((this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight);\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset = Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelect, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"true\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-select-disabled\": \"disabled\", \"class.mat-select-invalid\": \"errorState\", \"class.mat-select-required\": \"required\", \"class.mat-select-empty\": \"empty\", \"class.mat-select-multiple\": \"multiple\" }, classAttribute: \"mat-select\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatSelect },\n        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n    ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\\n\"], directives: [{ type: i7.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { type: i8.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i8.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i8.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i7.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { type: i8.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                        // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                        // value. At some point we should try to switch it back to being `listbox`.\n                        'aria-haspopup': 'true',\n                        'class': 'mat-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        '[class.mat-select-empty]': 'empty',\n                        '[class.mat-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\\n\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, declarations: [MatSelect, MatSelectTrigger], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule] });\nMatSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[CommonModule, OverlayModule, MatOptionModule, MatCommonModule], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport const queueScheduler = new QueueScheduler(QueueAction);\nexport const queue = queueScheduler;\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n","import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        if (!this.isStopped) {\n            const _events = this._events;\n            _events.push(value);\n            if (_events.length > this._bufferSize) {\n                _events.shift();\n            }\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        if (!this.isStopped) {\n            this._events.push(new ReplayEvent(this._getNow(), value));\n            this._trimBufferThenGetEvents();\n        }\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n","<form [formGroup]=\"form\" class=\"d-flex flex-column text-center\">\r\n  <p class=\"fa-2x mb-0 text-white\" *ngIf=\"currentTime$ | async as currentTIme\">\r\n    {{ currentTIme | date: 'yyyy-MM-dd' }}\r\n    {{ weekDay[currentTIme | date: 'EEEE'] }}\r\n  </p>\r\n\r\n  <p class=\"fa-5x font-weight-bold text-white\">\r\n    {{ currentTime$ | async | date: 'HH:mm:ss' }}\r\n  </p>\r\n\r\n  <ul class=\"list-group\">\r\n    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      <div class=\"align-items-center d-flex w-50\">\r\n        <i class=\"fa fa-clock-o fa-2x mr-3\"></i>\r\n        <div class=\"text-left\">\r\n          First time <br />\r\n          <span class=\"font-weight-bold\">首次打卡</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"w-50 h4 m-0\" [class.font-weight-bold]=\"startTime\" [class.text-black-50]=\"!startTime\">\r\n        {{ startTime ? (startTime | date: 'HH:mm') : '尚未打卡' }}\r\n        <br>\r\n        {{ startTime }}\r\n        <br>\r\n        {{ startTime | date: 'HH:mm' }}\r\n      </div>\r\n    </li>\r\n    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      <div class=\"align-items-center d-flex w-50\">\r\n        <i class=\"fa fa-clock-o fa-2x mr-3\"></i>\r\n        <div class=\"text-left\">\r\n          Last time <br />\r\n          <span class=\"font-weight-bold\">最後打卡</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"w-50 h4 m-0\" [class.font-weight-bold]=\"endTime\" [class.text-black-50]=\"!endTime\">\r\n        {{ endTime ? (endTime | date: 'HH:mm') : '尚未打卡' }}\r\n        <br>\r\n        {{ endTime }}\r\n        <br>\r\n        {{ endTime | date: 'HH:mm' }}\r\n      </div>\r\n    </li>\r\n  </ul>\r\n\r\n  <div class=\"form-group mt-3 text-left\">\r\n    <label for=\"remark\" class=\"h5 text-white\">備註：</label\r\n    ><input id=\"remark\" type=\"text\" class=\"form-control\" formControlName=\"remark\" />\r\n  </div>\r\n\r\n  <div class=\"d-flex\">\r\n    <button class=\"btn btn-secondary fa-2x rounded w-50\" type=\"button\" (click)=\"onSubmit('IN')\">\r\n      上班打卡\r\n      <span *ngIf=\"startTime\">（編輯）</span>\r\n    </button>\r\n    <i class=\"flex-fill p-1\"></i>\r\n    <button\r\n      class=\"btn btn-secondary fa-2x rounded w-50\"\r\n      type=\"button\"\r\n      (click)=\"onSubmit('OUT')\"\r\n      [disabled]=\"!startTime\"\r\n    >\r\n      下班打卡\r\n      <span *ngIf=\"endTime\">（編輯）</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n\r\n<ng-template #editTimeTpl let-data>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">編輯{{ data.clockType === 'IN' ? '上班' : '下班' }}打卡時間</h5>\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"editTimeDialogRef.close()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"editTimeForm\" class=\"h2 text-center\">\r\n      <select formControlName=\"hour\" name=\"hour\">\r\n        <option *ngFor=\"let hour of hours\" [value]=\"hour\">{{ hour | number: '2.0' }}</option>\r\n      </select>\r\n      <span>：</span>\r\n      <select formControlName=\"minute\" name=\"minute\">\r\n        <option *ngFor=\"let minute of minutes\" [value]=\"minute\">{{ minute | number: '2.0' }}</option>\r\n      </select>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"onEditTimeSubmit(data.clockType)\">送出</button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, HostBinding, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\nimport { differenceInMinutes, parse } from 'date-fns';\r\nimport { timer } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nimport { RecordService } from '@attendance-system/data/services';\r\nimport { AsDialog, AsDialogRef } from '@attendance-system/shared/ui/dialog';\r\n\r\nconst CLOCK_DEBOUNCE_MINUTES = 9.5 * 60;\r\n\r\ntype ClockType = 'IN' | 'OUT';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  @ViewChild('editTimeTpl', { static: true }) editTimeTpl: TemplateRef<void>;\r\n  @HostBinding('className') className = 'd-flex justify-content-center pt-2';\r\n\r\n  currentTime$ = timer(0, 1000).pipe(\r\n    map(() => new Date()),\r\n    shareReplay(1)\r\n  );\r\n\r\n  form = this.fb.group({ remark: [null] });\r\n\r\n  editTimeDialogRef: AsDialogRef<any, any>;\r\n  editTimeForm = this.fb.group({ hour: [0], minute: [0] });\r\n\r\n  startTime: Date = null;\r\n  endTime: Date = null;\r\n\r\n  readonly weekDay = {\r\n    Monday: '星期一',\r\n    Tuesday: '星期二',\r\n    Wednesday: '星期三',\r\n    Thursday: '星期四',\r\n    Friday: '星期五',\r\n    Saturday: '星期六',\r\n    Sunday: '星期日'\r\n  };\r\n  readonly hours = Array.from({ length: 24 }, (_, i) => i);\r\n  readonly minutes = Array.from({ length: 60 }, (_, i) => i);\r\n\r\n  constructor(private fb: FormBuilder, private recordService: RecordService, private dialog: AsDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.reloadRangeRecord();\r\n  }\r\n\r\n  reloadRangeRecord(): void {\r\n    this.recordService.getRange().subscribe(({ startTime, endTime, remark }) => {\r\n      this.startTime = startTime ? parse(startTime, 'yyyy-MM-dd HH:mm:ss', new Date()) : null;\r\n      this.endTime = endTime ? parse(endTime, 'yyyy-MM-dd HH:mm:ss', new Date()) : null;\r\n      this.form.reset({ remark });\r\n      alert(`今日的上班打卡時間為 ${startTime}，下班打卡時間為 ${endTime}，備註為 ${remark}`);\r\n    });\r\n  }\r\n\r\n  onSubmit(clockType: ClockType): void {\r\n    if (clockType === 'OUT' && this.startTime && !this.endTime) {\r\n      if (differenceInMinutes(this.startTime, new Date()) > CLOCK_DEBOUNCE_MINUTES) {\r\n        alert('下班打卡如果超過 9.5 小時，則擋著不給打下班卡！');\r\n        return;\r\n      }\r\n    }\r\n\r\n    if ((clockType === 'IN' && this.startTime) || (clockType === 'OUT' && this.endTime)) {\r\n      this.openEditTimeTpl(clockType);\r\n      return;\r\n    }\r\n\r\n    const remark = this.form.get('remark').value;\r\n    this.recordService.create(remark).subscribe(() => {\r\n      this.reloadRangeRecord();\r\n      alert(`今日的${clockType === 'IN' ? '上班' : '下班'}打卡時間已新增!!`);\r\n    });\r\n  }\r\n\r\n  openEditTimeTpl(clockType: ClockType): void {\r\n    const defaultTime = clockType === 'IN' ? this.startTime : this.endTime;\r\n\r\n    this.editTimeForm.reset({\r\n      hour: defaultTime.getHours(),\r\n      minute: defaultTime.getMinutes()\r\n    });\r\n\r\n    this.editTimeDialogRef = this.dialog.open(this.editTimeTpl, {\r\n      clockType\r\n    });\r\n\r\n    this.editTimeDialogRef.afterClosed$.subscribe(() => {\r\n      this.editTimeDialogRef = null;\r\n    });\r\n  }\r\n\r\n  onEditTimeSubmit(clockType: ClockType): void {\r\n    const { hour, minute } = this.editTimeForm.value;\r\n\r\n    let dateLeft: Date;\r\n    let dateRight: Date;\r\n\r\n    if (clockType === 'IN') {\r\n      const endTime = this.endTime;\r\n      dateRight = new Date(endTime.getFullYear(), endTime.getMonth(), endTime.getDate(), hour, minute);\r\n      dateLeft = new Date(\r\n        endTime.getFullYear(),\r\n        endTime.getMonth(),\r\n        endTime.getDate(),\r\n        endTime.getHours(),\r\n        endTime.getMinutes()\r\n      );\r\n\r\n      if (differenceInMinutes(dateLeft, dateRight) < 0) {\r\n        alert('上班打卡時間不能大於下班打卡時間！');\r\n        return;\r\n      }\r\n    } else {\r\n      const startTime = this.startTime;\r\n      dateLeft = new Date(startTime.getFullYear(), startTime.getMonth(), startTime.getDate(), hour, minute);\r\n      dateRight = new Date(\r\n        startTime.getFullYear(),\r\n        startTime.getMonth(),\r\n        startTime.getDate(),\r\n        startTime.getHours(),\r\n        startTime.getMinutes()\r\n      );\r\n\r\n      if (differenceInMinutes(dateLeft, dateRight) < 0) {\r\n        alert('下班打卡時間不能小於上班打卡時間！');\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (differenceInMinutes(dateLeft, dateRight) > CLOCK_DEBOUNCE_MINUTES) {\r\n      alert('打卡時間超過 9.5 小時，請重新輸入！');\r\n      return;\r\n    }\r\n\r\n    this.editTimeDialogRef.close();\r\n\r\n    // TODO: 更新打卡時間\r\n\r\n    alert(`今日的${clockType === 'IN' ? '上班' : '下班'}打卡時間已更新!!`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let config;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        config = configOrBufferSize;\n    }\n    else {\n        config = {\n            bufferSize: configOrBufferSize,\n            windowTime,\n            refCount: false,\n            scheduler\n        };\n    }\n    return (source) => source.lift(shareReplayOperator(config));\n}\nfunction shareReplayOperator({ bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, refCount: useRefCount, scheduler }) {\n    let subject;\n    let refCount = 0;\n    let subscription;\n    let hasError = false;\n    let isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        let innerSub;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            innerSub = subject.subscribe(this);\n            subscription = source.subscribe({\n                next(value) { subject.next(value); },\n                error(err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete() {\n                    isComplete = true;\n                    subscription = undefined;\n                    subject.complete();\n                },\n            });\n        }\n        else {\n            innerSub = subject.subscribe(this);\n        }\n        this.add(() => {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\n                subscription.unsubscribe();\n                subscription = undefined;\n                subject = undefined;\n            }\n        });\n    };\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport { SharedModule } from '@attendance-system/shared/shared.module';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    SharedModule,\r\n    DashboardRoutingModule\r\n  ]\r\n})\r\nexport class DashboardModule {}\r\n"],"sourceRoot":"webpack:///","file":"1.feefc934152b4a43.js"}